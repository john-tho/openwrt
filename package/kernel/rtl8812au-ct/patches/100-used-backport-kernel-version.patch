--- a/os_dep/linux/ioctl_cfg80211.c
+++ b/os_dep/linux/ioctl_cfg80211.c
@@ -797,7 +797,7 @@ check_bss:
 #endif
 
 		DBG_871X(FUNC_ADPT_FMT" call cfg80211_roamed\n", FUNC_ADPT_ARG(padapter));
-#if LINUX_VERSION_CODE >= KERNEL_VERSION(6, 0, 0)
+#if (defined(BACKPORTED_LINUX_VERSION_CODE) && (BACKPORTED_LINUX_VERSION_CODE >= KERNEL_VERSION(6, 0, 0))) || (LINUX_VERSION_CODE >= KERNEL_VERSION(6, 0, 0))
 		roam_info.links[0].channel = notify_channel;
 		roam_info.links[0].bssid = cur_network->network.MacAddress;
 #elif LINUX_VERSION_CODE >= KERNEL_VERSION(4, 12, 0)
@@ -1393,7 +1393,7 @@ exit:
 }
 
 static int cfg80211_rtw_add_key(struct wiphy *wiphy, struct net_device *ndev,
-#if (LINUX_VERSION_CODE >= KERNEL_VERSION(6, 1, 0))
+#if (defined(BACKPORTED_LINUX_VERSION_CODE) && (BACKPORTED_LINUX_VERSION_CODE >= KERNEL_VERSION(6, 1, 0))) || (LINUX_VERSION_CODE >= KERNEL_VERSION(6, 1, 0))
                                 int link_id, u8 key_index, bool pairwise, const u8 *mac_addr,
 #elif (LINUX_VERSION_CODE >= KERNEL_VERSION(2,6,37)) || defined(COMPAT_KERNEL_RELEASE)
                                 u8 key_index, bool pairwise, const u8 *mac_addr,
@@ -1535,7 +1535,7 @@ addkey_end:
 }
 
 static int cfg80211_rtw_get_key(struct wiphy *wiphy, struct net_device *ndev,
-#if (LINUX_VERSION_CODE >= KERNEL_VERSION(6, 1, 0))
+#if (defined(BACKPORTED_LINUX_VERSION_CODE) && (BACKPORTED_LINUX_VERSION_CODE >= KERNEL_VERSION(6, 1, 0))) || (LINUX_VERSION_CODE >= KERNEL_VERSION(6, 1, 0))
                                 int link_id, u8 key_index, bool pairwise, const u8 *mac_addr,
 #elif (LINUX_VERSION_CODE >= KERNEL_VERSION(2,6,37)) || defined(COMPAT_KERNEL_RELEASE)
                                 u8 key_index, bool pairwise, const u8 *mac_addr,
@@ -1570,7 +1570,7 @@ static int cfg80211_rtw_get_key(struct w
 }
 
 static int cfg80211_rtw_del_key(struct wiphy *wiphy, struct net_device *ndev,
-#if (LINUX_VERSION_CODE >= KERNEL_VERSION(6, 1, 0))
+#if (defined(BACKPORTED_LINUX_VERSION_CODE) && (BACKPORTED_LINUX_VERSION_CODE >= KERNEL_VERSION(6, 1, 0))) || (LINUX_VERSION_CODE >= KERNEL_VERSION(6, 1, 0))
                                 int link_id, u8 key_index, bool pairwise, const u8 *mac_addr)
 #elif (LINUX_VERSION_CODE >= KERNEL_VERSION(2,6,37)) || defined(COMPAT_KERNEL_RELEASE)
                                 u8 key_index, bool pairwise, const u8 *mac_addr)
@@ -1593,7 +1593,7 @@ static int cfg80211_rtw_del_key(struct w
 
 static int cfg80211_rtw_set_default_key(struct wiphy *wiphy,
 					struct net_device *ndev,
-#if (LINUX_VERSION_CODE >= KERNEL_VERSION(6, 1, 0))
+#if (defined(BACKPORTED_LINUX_VERSION_CODE) && (BACKPORTED_LINUX_VERSION_CODE >= KERNEL_VERSION(6, 1, 0))) || (LINUX_VERSION_CODE >= KERNEL_VERSION(6, 1, 0))
                                         int link_id,
 #endif
                                         u8 key_index
@@ -4034,7 +4034,7 @@ static int cfg80211_rtw_change_beacon(st
 	return ret;
 }
 
-#if (LINUX_VERSION_CODE >= KERNEL_VERSION(6,0,0))
+#if (defined(BACKPORTED_LINUX_VERSION_CODE) && (BACKPORTED_LINUX_VERSION_CODE >= KERNEL_VERSION(6, 0, 0))) || (LINUX_VERSION_CODE >= KERNEL_VERSION(6, 0, 0))
 static int cfg80211_rtw_stop_ap(struct wiphy *wiphy, struct net_device *ndev, unsigned int link_id)
 #else
 static int cfg80211_rtw_stop_ap(struct wiphy *wiphy, struct net_device *ndev)
